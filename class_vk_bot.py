import os
from dotenv import load_dotenv


from random import randrange

import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import re

# print(re.sub(r'[!?.,<>:''""/]*', '', '"–ü—Ä–∏–≤–µ—Ç/!!!?>'))


class VkinderBot:
    # —Ç–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
    vk = None

    # –¥–æ—Å—Ç—É–ø –∫ API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
    vk_api_access = None

    # –ø–æ–º–µ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏
    authorized = False

    # –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    long_poll = None

    # # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1234567890) –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
    # # –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –±—É–¥–µ—Ç –≤–µ—Å—Ç–∏—Å—å —Ç–æ–ª—å–∫–æ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º
    # default_user_id = None
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
        """
        load_dotenv()
        # –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        self.vk_api_access = self.do_auth()

        if self.vk_api_access is not None:
            self.authorized = True

        # vk = vk_api.VkApi(token=vk_bot_token)
        self.long_poll = VkLongPoll(self.vk)

    def do_auth(self):
        """
        –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –∑–∞ –≥—Ä—É–ø–ø—É –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —Ö—Ä–∞–Ω—è—â—É—é—Å—è –≤ —Ñ–∞–π–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è .env –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ ACCESS_TOKEN="1q2w3e4r5t6y7u8i9o..."
        :return: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å API
        """
        vk_bot_token = os.getenv('VK_BOT_TOKEN')
        try:
            self.vk = vk_api.VkApi(token=vk_bot_token)
            return self.vk.get_api()
        except Exception as error:
            print(error)
            return None

    def send_msg(self, user_id, text='', keyboard=None, attachment=None):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é user_id
        :param user_id: –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        :param text: —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        :param keyboard: –Ω–∞–ª–∏—á–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        :return: None
        """
        if not self.authorized:
            print("Unauthorized. Check if ACCESS_TOKEN is valid")  #logging
            return

        message = {
            'user_id': user_id,
            'message': text,
            'random_id': randrange(10 ** 7)
        }
        if keyboard:
            message['keyboard'] = keyboard.get_keyboard()

        if attachment:

            # –∑–¥–µ—Å—å –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            message['attachment'] = attachment

            # self.vk.method('messages.send', {
            #     'user_id': event.user_id,
            #     'message': "–ò–º—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            #     'attachment': attachment,
            #     'random_id': randrange(10 ** 7)
            # })


        try:
            self.vk.method('messages.send', message)
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è ID {user_id} —Å —Ç–µ–∫—Å—Ç–æ–º: {text}")  # –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        except Exception as error:
            print(error)

    def start_message(self, user_id):
        """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        keyboard = VkKeyboard(one_time=False, inline=True)
        keyboard.add_button(label='–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', color=VkKeyboardColor.SECONDARY)
        self.send_msg(user_id, "–ü—Ä–∏–≤–µ—Ç! –¢—ã –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–∞?", keyboard=keyboard)

    def send_user_photos(self, user_id, new_user_id, user_name, photos=()):
        """ """
        uploader = vk_api.upload.VkUpload(self.vk)
        # –ø–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π photos = ['photo1.jpg', 'photo2.jpg', 'photo3.jpg']
        img = uploader.photo_messages(photos)
        attachment = ''
        for photo in img:
            attachment += f"photo{photo['owner_id']}_{photo['id']},"

        # p = {
        #     'type': 'callback_button',
        #     # 'task': self.callback_button,
        #     'user': user_id,
        #     'likes': new_user_id
        # }

        p = {
            "type": "show_snackbar",
            "text": "–ü–æ–∫–∞–∂–∏ –∏—Å—á–µ–∑–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ"
          }


        keyboard = VkKeyboard(one_time=False, inline=True)
        keyboard.add_callback_button(label='–ù—Ä–∞–≤–∏—Ç—Å—è', color=VkKeyboardColor.POSITIVE, payload=p)
        # keyboard.add_button(label='–ù—Ä–∞–≤–∏—Ç—Å—è', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button(label='–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()
        keyboard.add_button(label='–î–∞–ª—å—à–µ', color=VkKeyboardColor.PRIMARY)
        keyboard.add_button(label='–°—Ç–æ–ø', color=VkKeyboardColor.SECONDARY)

        self.send_msg(user_id, user_name, keyboard=keyboard, attachment=attachment)

    @staticmethod
    def callback_button(new_user_id):
        print(new_user_id)

    def run_long_poll(self):
        """
        –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        """
        for event in self.long_poll.listen():
            # print(event.type)
            # print('extra_values', event.extra_values)
            # print('flags', event.flags)
            # print(event.extra)
            print(event)
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                # print(event.message_flags)

                msg_text = event.text
                # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–Ω–∞—á–∞—Ç—å' –∏–ª–∏ –ø–∏—à–µ—Ç '–Ω–∞—á–∞—Ç—å' –∏–ª–∏ '–ø—Ä–∏–≤–µ—Ç'
                if re.sub(r'[!?.,<>:''""/]*', '', msg_text).lower() in ("–ø—Ä–∏–≤–µ—Ç", '–Ω–∞—á–∞—Ç—å'):
                    # –º–µ—Ç–æ–¥, —Å–æ–±–∏—Ä–∞—é—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    # –º–µ—Ç–æ–¥, –¥–æ–±–∞–≤–ª—è—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
                    self.start_message(event.user_id)

                elif msg_text in ("–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", '–î–∞–ª—å—à–µ'):
                    # –∑–¥–µ—Å—å –∏—â–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∏–º—è –∏ —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                    # –Ω—É–∂–µ–Ω –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç id, –∏–º—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–ø–∏—Å–æ–∫ –µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                    # (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–∏ –æ—Ç–±–æ—Ä–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤)
                    new_user_id = 'new_id'
                    user_name = '–ò–º—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                    photos = ['hearts.jpg', 'vkinder.jpg']
                    self.send_user_photos(event.user_id, new_user_id, user_name, photos=photos)

                elif re.sub(r'[!?.,<>:''""/]*', '', msg_text).lower() in ("–ø–æ–∫–∞", "–∑–∞–≤–µ—Ä—à–∏—Ç—å", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "—Å—Ç–æ–ø", "—Ö–≤–∞—Ç–∏—Ç"):
                    self.send_msg(event.user_id, "–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –î–æ —Å–≤–∏–¥–∞–Ω–∏—èüñ§")
                else:
                    self.send_msg(event.user_id, "–ù–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")


            # elif event. .payload.get('type') == 'callback_button':
            #     print(event)
            #     print('—É—Ä–∞–∞')




vk = VkinderBot()
vk.run_long_poll()